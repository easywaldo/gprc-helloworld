import org.jetbrains.kotlin.gradle.tasks.KotlinCompile

plugins {
    id 'org.springframework.boot' version '3.2.5'
    id 'io.spring.dependency-management' version '1.1.4'
    id 'org.jetbrains.kotlin.jvm' version '1.9.23'
    id 'org.jetbrains.kotlin.plugin.spring' version '1.9.23'
    id 'org.jetbrains.kotlin.plugin.jpa' version '1.9.23'

    id 'com.google.protobuf' version '0.8.17' // 추가
//    id 'kotlin'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'

java {
    sourceCompatibility = '17'
}

repositories {
    mavenCentral()
}

sourceSets {
    src {
        main {
            java {
                srcDirs 'build/generated/source/proto/main/grpc'
                srcDirs 'build/generated/source/proto/main/java'
            }
            kotlin {
                srcDirs 'build/generated/source/proto/main/grpckt'
                srcDirs 'build/generated/source/proto/main/kotlin'
            }
        }
    }
}

def grpcKotlinVersion = "1.1.0"

dependencies {
//    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter'
    implementation 'com.fasterxml.jackson.module:jackson-module-kotlin'
    implementation 'org.jetbrains.kotlin:kotlin-reflect'
//    runtimeOnly 'com.h2database:h2'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'

    // ===== 추가 =====
    implementation 'io.grpc:grpc-netty-shaded:1.41.0'
    implementation 'io.grpc:grpc-protobuf:1.41.0'
    implementation 'io.grpc:grpc-stub:1.41.0'
    implementation "io.grpc:grpc-kotlin-stub:$grpcKotlinVersion"
    implementation 'io.grpc:grpc-kotlin-stub:1.1.0' // gRPC Kotlin 스텁 종속성 추가
//    compileOnly 'org.apache.tomcat:annotations-api:6.0.53'
    implementation 'io.github.lognet:grpc-spring-boot-starter:4.4.5'
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:1.4.3"
    implementation "net.devh:grpc-server-spring-boot-starter:2.14.0.RELEASE"
    // ===============
}

tasks.withType(KotlinCompile) {
    kotlinOptions {
        freeCompilerArgs += '-Xjsr305=strict'
        jvmTarget = '17'
    }
}

tasks.named('test') {
    useJUnitPlatform()
}

// 추가
// generageProto 등 유틸제공
protobuf {
    protoc {
        artifact = "com.google.protobuf:protoc:3.17.3"
    }
    plugins {
        grpc {
            artifact = 'io.grpc:protoc-gen-grpc-java:1.41.0'
        }
        grpckt {
            artifact = "io.grpc:protoc-gen-grpc-kotlin:1.0.0:jdk7@jar"
        }
    }
    generateProtoTasks {
        all()*.plugins {
            grpc {}
            grpckt {}
        }
    }
}